{"mappings":"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","sources":["src/firebase.js","src/main.js"],"sourcesContent":["let highscorelist; \n\nasync function getFirebase() {\n  const url = 'https://highscore2-ea1fd-default-rtdb.europe-west1.firebasedatabase.app/.json';\n\n  // Fetch data from Firebase\n  const response = await fetch(url);\n  const data = await response.json();\n\n\n  if (!data) {\n    return [];\n  }\n\n  // Create an array of objects from the Firebase data\n  highscorelist = Object.keys(data).map(key => ({\n    name: data[key].name,\n    score: data[key].score\n  }));\n  //Sort the list in numerical order\n  highscorelist.sort((a, b) => b.score - a.score);\n  //Return the array of objects\n  return highscorelist;\n}\n\n\n\n//PUT\nasync function putToFirebase(name, score) {\n  const url = 'https://highscore2-ea1fd-default-rtdb.europe-west1.firebasedatabase.app/.json';\n\n\n  highscorelist = await getFirebase();\n\n  const options = {\n    method: 'PUT',\n    body: JSON.stringify(highscorelist),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  }\n\n  const response = await fetch(url, options);\n  const data = await response.json();\n\n  return data;\n}\n\nexport { getFirebase };\nexport { putToFirebase };","import { getFirebase, putToFirebase } from \"./firebase.js\"\n\n\n// SELECTAT(hämtat) ok-knappen fron DOM:en \nconst okButton = document.querySelector('#ok');\n\n// Skapat ett P element som heter usernameP\nconst usernameP = document.createElement('p');\n\n// lagt till p elementet till bodyn\ndocument.body.append(usernameP);\n\nlet input;\nlet computer;\nlet playerScore = 0;\nlet computerScore = 0;\nlet highscorelist = [];\n\n\n\n\nconst winnerOfTheRoundP = document.querySelector('#winnerOfTheRoundP');\nconst playerScoreP = document.querySelector('#playerScoreP');\nconst computerScoreP = document.querySelector('#computerScoreP');\nconst playersChoiceP = document.querySelector('#playersChoiceP');\nconst computersChoiceP = document.querySelector('#computersChoiceP');\nconst highscoreListElement = document.querySelector(\"#highscoreP\");\n\n\nconst maxPlayers = 5;\nconst rockOption = 0;\nconst paperOption = 1;\nconst scissorsOption = 2;\n\n\nokButton.addEventListener('click', event => {\n    event.preventDefault();\n    // Hämtar värdet från input-boxen\n    input = document.querySelector('#input').value;\n\n    // Tilldelar ditt p element usernameP till värdet från input-boxen.\n    usernameP.innerText = `Hello, ${input}! Please make a choice from the buttons above.`\n\n});\n\n\n//Hämtar rock-knappen från DOM:en\nconst rockButton = document.querySelector('#rock');\n\n//Arrow-function för rock-knappen\nrockButton.addEventListener('click', event => {\n    // Visar användarens val\n    playersChoiceP.innerText = `${input} chose: Rock`;\n\n    //När antingen användaren eller datorn får tre poäng kommer deras allt att nollställas\n    if (computerScore === 1) {\n        console.log('final score', playerScore,computerScore, input);\n\n        updatedHighscore(input, playerScore, highscorelist, highscoreListElement);\n\n        playerScore = 0;\n        computerScore = 0;\n\n        playersChoiceP.innerText = 'Players choice: ';\n        computersChoiceP.innerText = 'Computers choice: '\n\n        playerScoreP.innerText = 'Player Score: '\n        computerScoreP.innerText = 'Computer Score: '\n\n\n    } else {\n        //Math.random() som genererar siffron 0 till 2. 0===Rock , 1===Paper, 2===Scissors\n        computer = Math.floor(Math.random() * 3);\n\n        if (computer === 0) {\n            computersChoiceP.innerText = 'Computer chose: Rock';\n            playerScoreP.innerText = `${input}s Score: ${playerScore}`;\n            computerScoreP.innerText = `Computers Score: ${computerScore}`;\n            winnerOfTheRoundP.innerText = 'Winner of the round: Draw!';\n        }\n        else if (computer === 1) {\n            computersChoiceP.innerText = 'Computer chose: Paper';\n            computerScore++;\n            playerScoreP.innerText = `${input}s Score: ${playerScore}`;\n            computerScoreP.innerText = `Computers Score: ${computerScore}`;\n            winnerOfTheRoundP.innerText = 'Winner of the round: Computer';\n        }\n        else {\n            computersChoiceP.innerText = 'Computer chose: Scissors';\n            playerScore++;\n            winnerOfTheRoundP.innerText = `Winner of the round is: ${input}`\n            playerScoreP.innerText = `${input}s Score: ${playerScore}`\n            computerScoreP.innerText = `Computers Score: ${computerScore}`;\n\n\n        }\n\n    }\n\n\n})\n\n//Hämtar paper-knappen från DOM:en\nconst paperButton = document.querySelector('#paper');\n\n//Arrow-function för paper-knappen\npaperButton.addEventListener('click', event => {\n    input = document.querySelector('#input').value;\n\n    playersChoiceP.innerText = `${input} chose: Paper`;\n\n    if (computerScore === 1) {\n\n        console.log('final score', playerScore, computerScore, input);\n\n\n        updatedHighscore(input, playerScore, highscorelist, highscoreListElement);\n\n        playerScore = 0;\n        computerScore = 0;\n\n\n\n        playersChoiceP.innerText = 'Players choice: ';\n        computersChoiceP.innerText = 'Computers choice: ';\n\n        winnerOfTheRoundP.innerText = 'Winner of the round is:';\n\n        playerScoreP.innerText = 'Player Score: '\n        computerScoreP.innerText = 'Computer Score: ';\n\n\n\n        //Om ingen har nått 3 poäng ska resten av alternativen köras när man trycker på någon av knapparna\n    }\n    else {\n\n        //Math.random() so  genererar siffron 0 till 2. 0===Rock , 1===Paper, 2===Scissors\n        computer = Math.floor(Math.random() * 3);\n\n\n        if (computer === 0) {\n            playerScore++;\n            playerScoreP.innerText = `${input}s Score: ${playerScore}`;\n            computerScoreP.innerText = `Computer Score: ${computerScore}`;\n            computersChoiceP.innerText = 'Computer chose: Rock';\n            winnerOfTheRoundP.innerText = `Winner of the round: ${input}`;\n\n        }\n        else if (computer === 1) {\n            computersChoiceP.innerText = 'Computer chose: Paper';\n            playerScoreP.innerText = `${input}s Score: ${playerScore}`;\n            computerScoreP.innerText = `Computers Score: ${computerScore}`;\n            winnerOfTheRoundP.innerText = 'Winner of the round: Draw!';\n\n        }\n        else {\n            computerScore++;\n            computersChoiceP.innerText = 'Computer chose: Scissors';\n            playerScoreP.innerText = `${input}s Score: ${playerScore}`;\n            computerScoreP.innerText = `Computers Score: ${computerScore}`;\n            winnerOfTheRoundP.innerText = 'Winner of the round: Computer';\n\n        }\n    }\n\n})\n\n//Hämtar scissors-knappen från DOM:en\nconst scissorsButton = document.querySelector('#scissors');\n\n//Arrow-function för scissors-knappen\nscissorsButton.addEventListener('click', event => {\n    playersChoiceP.innerText = `${input} chose: Scissors`;\n\n    if (computerScore === 1) {\n\n        console.log('final score', playerScore, computerScore, input);\n\n\n        updatedHighscore(input, playerScore, highscorelist, highscoreListElement);\n\n        playerScore = 0;\n        computerScore = 0;\n\n        playersChoiceP.innerText = 'Players choice: ';\n        computersChoiceP.innerText = 'Computers choice: ';\n\n        winnerOfTheRoundP.innerText = 'Winner of the round is:';\n\n        playerScoreP.innerText = 'Player Score: '\n        computerScoreP.innerText = 'Computer Score: ';\n\n    } else {\n\n        //Math.random() som genererar siffrorna 0 till 2. 0===Rock , 1===Paper, 2===Scissors\n        computer = Math.floor(Math.random() * 3);\n\n\n        if (computer === 0) {\n            computerScore++;\n            computerScoreP.innerText = `Computer Score: ${computerScore}`;\n            playerScoreP.innerText = `${input} Score: ${playerScore}`;\n            computersChoiceP.innerText = 'Computer chose: Rock'\n            winnerOfTheRoundP.innerText = 'Winner of the round: Computer';\n\n        }\n        else if (computer === 1) {\n            computersChoiceP.innerText = 'Computer chose: Paper';\n            playerScore++;\n            playerScoreP.innerText = `${input}s Score: ${playerScore}`;\n            computerScoreP.innerText = `Computer Score: ${computerScore}`;\n            winnerOfTheRoundP.innerText = `Winner of the round: ${input}`;\n\n        }\n        else {\n\n            //computersChoiceP.innerText = 'Computer chose: Scissors';\n            playerScoreP.innerText = `${input}s Score: ${playerScore}`;\n            computerScoreP.innerText = `Computers Score: ${computerScore}`;\n            winnerOfTheRoundP.innerText = 'Winner of the round: Draw!';\n        }\n\n    }\n\n})\n\nasync function highScore() {\n\n    highscorelist = await getFirebase();\n\n\n    highscoreListElement.innerHTML = ''; // clear the high score list element\n\n    highscorelist.forEach(highscore => {\n        console.log(highscore)\n        const listItemElement = document.createElement('li');\n        listItemElement.innerText = `${highscore.name} | ${highscore.score}`;\n        highscoreListElement.appendChild(listItemElement);\n    })\n\n\n}\n\nhighScore();\n\n//Add a players new name and score to the highscorelist\nasync function updatedHighscore(input, playerScore, highscorelist, highscoreListElement) {\n    highscorelist = await getFirebase();\n    console.log(highscorelist);\n\n    //Push the new players score and name to the highscore list\n    highscorelist.push({ name: input, score: playerScore });\n    //sort the list in numerical order\n    highscorelist.sort((a, b) => b.score - a.score);\n\n    console.log(highscorelist);\n    if (highscorelist.length > maxPlayers) {\n        // Remove the last player on the list\n        highscorelist.pop();\n    }\n\n    // console.log(highscorelist);\n    putToFirebase(highscorelist);\n\n    // Clear the high score list element\n    highscoreListElement.innerHTML = '';\n\n    highscorelist.forEach(highscore => {\n        const listItemElement = document.createElement('li');\n        listItemElement.innerText = `${highscore.name} | ${highscore.score}`;\n        highscoreListElement.appendChild(listItemElement);\n    })\n\n}"],"names":["$117415e422c8aaf1$var$highscorelist","async","$117415e422c8aaf1$export$7a667d08ed65fa47","response","fetch","data","json","Object","keys","map","key","name","score","sort","a","b","$117415e422c8aaf1$export$5e904bb7ed132742","options","method","body","JSON","stringify","headers","$2b6e161c9edcf319$var$okButton","document","querySelector","$2b6e161c9edcf319$var$usernameP","createElement","$2b6e161c9edcf319$var$input","$2b6e161c9edcf319$var$computer","append","$2b6e161c9edcf319$var$playerScore","$2b6e161c9edcf319$var$computerScore","$2b6e161c9edcf319$var$highscorelist","$2b6e161c9edcf319$var$winnerOfTheRoundP","$2b6e161c9edcf319$var$playerScoreP","$2b6e161c9edcf319$var$computerScoreP","$2b6e161c9edcf319$var$playersChoiceP","$2b6e161c9edcf319$var$computersChoiceP","$2b6e161c9edcf319$var$highscoreListElement","addEventListener","event","preventDefault","value","innerText","console","log","$2b6e161c9edcf319$var$updatedHighscore","Math","floor","random","input","playerScore","highscorelist","highscoreListElement","push","length","pop","innerHTML","forEach","highscore","listItemElement","appendChild","$2b6e161c9edcf319$var$highScore"],"version":3,"file":"index.8e7478ac.js.map"}